/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main.java.pokedex;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;

/**
 *
 * @author Guillermo
 */
public class Pokedex extends javax.swing.JFrame {

    private ImageIcon pokemonImage = new ImageIcon();
    private ArrayList<Pokemon> pokemonList = new ArrayList<>();

    /**
     * Creates new form Pokedex
     */
    public Pokedex() {
        initComponents();
        descriptionText.setVisible(false);
        jScrollPane1.setBorder(null);
        descriptionText.setLineWrap(true);
        DefaultListModel model = new DefaultListModel();
        jList1.setModel(model);
        try {
            String row;
            BufferedReader csvReader = new BufferedReader(new FileReader(getClass().getClassLoader().getResource("main/resources/pokedex.csv").getFile()));
            int count = 0;
            while ((row = csvReader.readLine()) != null) {
                if (count > 0) {
                    String[] data = row.split(",(?=([^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)");
                    model.addElement(String.valueOf(count + ". " + data[1]));
                    if (data.length == 7) {
                        pokemonList.add(new Pokemon(data[1], data[2], data[3], data[4], data[5], data[6]));
                    } else {
                        pokemonList.add(new Pokemon(data[1], data[2], data[3], data[4], data[5], data[6], data[7]));
                    }
                }
                count++;
            }
            csvReader.close();
        } catch (IOException e) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionText = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel1 = new JPanelWithBackground();
        nameText = new javax.swing.JLabel();
        firstType = new javax.swing.JLabel();
        secondType = new javax.swing.JLabel();
        heightText = new javax.swing.JLabel();
        weightText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("pokedex");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jScrollPane1.setOpaque(false);

        descriptionText.setEditable(false);
        descriptionText.setColumns(20);
        descriptionText.setRows(5);
        descriptionText.setWrapStyleWord(true);
        descriptionText.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        descriptionText.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(descriptionText);

        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jList1KeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        jPanel1.setPreferredSize(new java.awt.Dimension(215, 215));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 215, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 215, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(firstType, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(secondType, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(heightText, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                            .addComponent(weightText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(firstType, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(secondType, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(heightText, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(weightText, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
        if (jList1.getSelectedValue() != null) {
            descriptionText.setVisible(true);
            pokemonImage = new ImageIcon(getClass().getClassLoader().getResource("main/resources/photos/" + jList1.getSelectedValue().substring(0, jList1.getSelectedValue().indexOf(".")) + ".png"));
            ((JPanelWithBackground) jPanel1).setImagen(pokemonImage.getImage());
            nameText.setText(pokemonList.get(jList1.getSelectedIndex()).getName());
            descriptionText.setText(pokemonList.get(jList1.getSelectedIndex()).getDescription());
            firstType.setText(pokemonList.get(jList1.getSelectedIndex()).getFirstType());
            secondType.setText(pokemonList.get(jList1.getSelectedIndex()).getSecondType());
            heightText.setText("Altura: " + pokemonList.get(jList1.getSelectedIndex()).getHeight());
            weightText.setText("Peso: " + pokemonList.get(jList1.getSelectedIndex()).getWeight());
        }
    }//GEN-LAST:event_jList1KeyPressed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        descriptionText.setVisible(true);
        pokemonImage = new ImageIcon(getClass().getClassLoader().getResource("main/resources/photos/" + jList1.getSelectedValue().substring(0, jList1.getSelectedValue().indexOf(".")) + ".png"));
        ((JPanelWithBackground) jPanel1).setImagen(pokemonImage.getImage());
        nameText.setText(pokemonList.get(jList1.getSelectedIndex()).getName());
        descriptionText.setText(pokemonList.get(jList1.getSelectedIndex()).getDescription());
        firstType.setText(pokemonList.get(jList1.getSelectedIndex()).getFirstType());
        secondType.setText(pokemonList.get(jList1.getSelectedIndex()).getSecondType());
        heightText.setText("Altura: " + pokemonList.get(jList1.getSelectedIndex()).getHeight());
        weightText.setText("Peso: " + pokemonList.get(jList1.getSelectedIndex()).getWeight());
    }//GEN-LAST:event_jList1MouseClicked

    private void jList1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyReleased
        if (jList1.getSelectedValue() != null) {
            descriptionText.setVisible(true);
            pokemonImage = new ImageIcon(getClass().getClassLoader().getResource("main/resources/photos/" + jList1.getSelectedValue().substring(0, jList1.getSelectedValue().indexOf(".")) + ".png"));
            ((JPanelWithBackground) jPanel1).setImagen(pokemonImage.getImage());
            nameText.setText(pokemonList.get(jList1.getSelectedIndex()).getName());
            descriptionText.setText(pokemonList.get(jList1.getSelectedIndex()).getDescription());
            firstType.setText(pokemonList.get(jList1.getSelectedIndex()).getFirstType());
            secondType.setText(pokemonList.get(jList1.getSelectedIndex()).getSecondType());
            heightText.setText("Altura: " + pokemonList.get(jList1.getSelectedIndex()).getHeight());
            weightText.setText("Peso: " + pokemonList.get(jList1.getSelectedIndex()).getWeight());
        }
    }//GEN-LAST:event_jList1KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pokedex().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea descriptionText;
    private javax.swing.JLabel firstType;
    private javax.swing.JLabel heightText;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel nameText;
    private javax.swing.JLabel secondType;
    private javax.swing.JLabel weightText;
    // End of variables declaration//GEN-END:variables
}
